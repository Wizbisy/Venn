"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "NearRawProvider", {
    enumerable: true,
    get: function() {
        return NearRawProvider;
    }
});
const _core = require("@near-wallet-selector/core");
const _mynearwallet = require("@near-wallet-selector/my-near-wallet");
const _enums = require("../../enums");
const _types = require("../../types");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
let NearRawProvider = class NearRawProvider {
    init() {
        var _this = this;
        return _async_to_generator(function*() {
            _this.selector = yield (0, _core.setupWalletSelector)({
                network: _enums.NEAR_CHAINS.TestNet,
                modules: [
                    (0, _mynearwallet.setupMyNearWallet)()
                ]
            });
            const isSignedIn = _this.selector.isSignedIn();
            if (isSignedIn) {
                var _this_selector_store_getState_accounts_, _this_selector_store_getState_accounts, _this_selector_store_getState, _this_selector_store, _this_selector;
                _this.wallet = yield _this.selector.wallet();
                var _this_selector_store_getState_accounts__accountId;
                _this.accountId = (_this_selector_store_getState_accounts__accountId = (_this_selector = _this.selector) === null || _this_selector === void 0 ? void 0 : (_this_selector_store = _this_selector.store) === null || _this_selector_store === void 0 ? void 0 : (_this_selector_store_getState = _this_selector_store.getState()) === null || _this_selector_store_getState === void 0 ? void 0 : (_this_selector_store_getState_accounts = _this_selector_store_getState.accounts) === null || _this_selector_store_getState_accounts === void 0 ? void 0 : (_this_selector_store_getState_accounts_ = _this_selector_store_getState_accounts[0]) === null || _this_selector_store_getState_accounts_ === void 0 ? void 0 : _this_selector_store_getState_accounts_.accountId) !== null && _this_selector_store_getState_accounts__accountId !== void 0 ? _this_selector_store_getState_accounts__accountId : '';
            }
            return isSignedIn;
        })();
    }
    signIn() {
        var _this = this;
        return _async_to_generator(function*() {
            if (!_this.selector || Boolean(_this.accountId)) return;
            _this.wallet = yield _this.selector.wallet(_types.ENearWalletId.MyNearWallet);
            yield _this.wallet.signIn({
                contractId: _this.createAccessKeyFor,
                methodNames: [],
                accounts: []
            });
        })();
    }
    signOut() {
        var _this = this;
        return _async_to_generator(function*() {
            if (!_this.wallet) return;
            yield _this.wallet.signOut();
            _this.wallet = null;
            _this.accountId = '';
        })();
    }
    signAndSendTxs(txBody) {
        var _this = this;
        return _async_to_generator(function*() {
            if (!_this.wallet) return [];
            const outcome = yield _this.wallet.signAndSendTransactions(txBody);
            return outcome || [];
        })();
    }
    constructor({ createAccessKeyFor = '' }){
        _define_property(this, "selector", null);
        _define_property(this, "wallet", null);
        _define_property(this, "createAccessKeyFor", void 0);
        _define_property(this, "accountId", '');
        _define_property(this, "isNear", true);
        this.createAccessKeyFor = createAccessKeyFor;
    }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvcmF3L25lYXItcmF3LXByb3ZpZGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIHNldHVwV2FsbGV0U2VsZWN0b3IsXG4gIHR5cGUgV2FsbGV0LFxuICB0eXBlIFdhbGxldFNlbGVjdG9yLFxufSBmcm9tICdAbmVhci13YWxsZXQtc2VsZWN0b3IvY29yZSdcbmltcG9ydCB7IHNldHVwTXlOZWFyV2FsbGV0IH0gZnJvbSAnQG5lYXItd2FsbGV0LXNlbGVjdG9yL215LW5lYXItd2FsbGV0J1xuaW1wb3J0IHR5cGUgeyBwcm92aWRlcnMgfSBmcm9tICduZWFyLWFwaS1qcydcblxuaW1wb3J0IHsgTkVBUl9DSEFJTlMgfSBmcm9tICdAL2VudW1zJ1xuaW1wb3J0IHsgRU5lYXJXYWxsZXRJZCwgdHlwZSBOZWFyVHhSZXF1ZXN0Qm9keSB9IGZyb20gJ0AvdHlwZXMnXG5cbmV4cG9ydCBjbGFzcyBOZWFyUmF3UHJvdmlkZXIge1xuICBzZWxlY3RvcjogV2FsbGV0U2VsZWN0b3IgfCBudWxsID0gbnVsbFxuICB3YWxsZXQ6IFdhbGxldCB8IG51bGwgPSBudWxsXG4gIGNyZWF0ZUFjY2Vzc0tleUZvcjogc3RyaW5nXG4gIGFjY291bnRJZCA9ICcnXG4gIGlzTmVhciA9IHRydWVcblxuICBjb25zdHJ1Y3Rvcih7IGNyZWF0ZUFjY2Vzc0tleUZvciA9ICcnIH06IHsgY3JlYXRlQWNjZXNzS2V5Rm9yPzogc3RyaW5nIH0pIHtcbiAgICB0aGlzLmNyZWF0ZUFjY2Vzc0tleUZvciA9IGNyZWF0ZUFjY2Vzc0tleUZvclxuICB9XG5cbiAgYXN5bmMgaW5pdCgpIHtcbiAgICB0aGlzLnNlbGVjdG9yID0gYXdhaXQgc2V0dXBXYWxsZXRTZWxlY3Rvcih7XG4gICAgICBuZXR3b3JrOiBORUFSX0NIQUlOUy5UZXN0TmV0LFxuICAgICAgbW9kdWxlczogW3NldHVwTXlOZWFyV2FsbGV0KCldLFxuICAgIH0pXG5cbiAgICBjb25zdCBpc1NpZ25lZEluID0gdGhpcy5zZWxlY3Rvci5pc1NpZ25lZEluKClcblxuICAgIGlmIChpc1NpZ25lZEluKSB7XG4gICAgICB0aGlzLndhbGxldCA9IGF3YWl0IHRoaXMuc2VsZWN0b3Iud2FsbGV0KClcbiAgICAgIHRoaXMuYWNjb3VudElkID1cbiAgICAgICAgdGhpcy5zZWxlY3Rvcj8uc3RvcmU/LmdldFN0YXRlKCk/LmFjY291bnRzPy5bMF0/LmFjY291bnRJZCA/PyAnJ1xuICAgIH1cblxuICAgIHJldHVybiBpc1NpZ25lZEluXG4gIH1cblxuICBhc3luYyBzaWduSW4oKSB7XG4gICAgaWYgKCF0aGlzLnNlbGVjdG9yIHx8IEJvb2xlYW4odGhpcy5hY2NvdW50SWQpKSByZXR1cm5cblxuICAgIHRoaXMud2FsbGV0ID0gYXdhaXQgdGhpcy5zZWxlY3Rvci53YWxsZXQoRU5lYXJXYWxsZXRJZC5NeU5lYXJXYWxsZXQpXG4gICAgYXdhaXQgdGhpcy53YWxsZXQuc2lnbkluKHtcbiAgICAgIGNvbnRyYWN0SWQ6IHRoaXMuY3JlYXRlQWNjZXNzS2V5Rm9yLFxuICAgICAgbWV0aG9kTmFtZXM6IFtdLFxuICAgICAgYWNjb3VudHM6IFtdLFxuICAgIH0pXG4gIH1cblxuICBhc3luYyBzaWduT3V0KCkge1xuICAgIGlmICghdGhpcy53YWxsZXQpIHJldHVyblxuXG4gICAgYXdhaXQgdGhpcy53YWxsZXQuc2lnbk91dCgpXG4gICAgdGhpcy53YWxsZXQgPSBudWxsXG4gICAgdGhpcy5hY2NvdW50SWQgPSAnJ1xuICB9XG5cbiAgYXN5bmMgc2lnbkFuZFNlbmRUeHMoXG4gICAgdHhCb2R5OiBOZWFyVHhSZXF1ZXN0Qm9keSxcbiAgKTogUHJvbWlzZTxwcm92aWRlcnMuRmluYWxFeGVjdXRpb25PdXRjb21lW10+IHtcbiAgICBpZiAoIXRoaXMud2FsbGV0KSByZXR1cm4gW11cblxuICAgIGNvbnN0IG91dGNvbWUgPSBhd2FpdCB0aGlzLndhbGxldC5zaWduQW5kU2VuZFRyYW5zYWN0aW9ucyh0eEJvZHkpXG5cbiAgICByZXR1cm4gb3V0Y29tZSB8fCBbXVxuICB9XG59XG4iXSwibmFtZXMiOlsiTmVhclJhd1Byb3ZpZGVyIiwiaW5pdCIsInNlbGVjdG9yIiwic2V0dXBXYWxsZXRTZWxlY3RvciIsIm5ldHdvcmsiLCJORUFSX0NIQUlOUyIsIlRlc3ROZXQiLCJtb2R1bGVzIiwic2V0dXBNeU5lYXJXYWxsZXQiLCJpc1NpZ25lZEluIiwid2FsbGV0IiwiYWNjb3VudElkIiwic3RvcmUiLCJnZXRTdGF0ZSIsImFjY291bnRzIiwic2lnbkluIiwiQm9vbGVhbiIsIkVOZWFyV2FsbGV0SWQiLCJNeU5lYXJXYWxsZXQiLCJjb250cmFjdElkIiwiY3JlYXRlQWNjZXNzS2V5Rm9yIiwibWV0aG9kTmFtZXMiLCJzaWduT3V0Iiwic2lnbkFuZFNlbmRUeHMiLCJ0eEJvZHkiLCJvdXRjb21lIiwic2lnbkFuZFNlbmRUcmFuc2FjdGlvbnMiLCJjb25zdHJ1Y3RvciIsImlzTmVhciJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFXYUE7OztlQUFBQTs7O3NCQVBOOzhCQUMyQjt1QkFHTjt1QkFDMEI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFL0MsSUFBQSxBQUFNQSxrQkFBTixNQUFNQTtJQVdMQzs7ZUFBTixvQkFBQTtZQUNFLE1BQUtDLFFBQVEsR0FBRyxNQUFNQyxJQUFBQSx5QkFBbUIsRUFBQztnQkFDeENDLFNBQVNDLGtCQUFXLENBQUNDLE9BQU87Z0JBQzVCQyxTQUFTO29CQUFDQyxJQUFBQSwrQkFBaUI7aUJBQUc7WUFDaEM7WUFFQSxNQUFNQyxhQUFhLE1BQUtQLFFBQVEsQ0FBQ08sVUFBVTtZQUUzQyxJQUFJQSxZQUFZO29CQUdaLHlDQUFBLHdDQUFBLCtCQUFBLHNCQUFBO2dCQUZGLE1BQUtDLE1BQU0sR0FBRyxNQUFNLE1BQUtSLFFBQVEsQ0FBQ1EsTUFBTTtvQkFFdEM7Z0JBREYsTUFBS0MsU0FBUyxHQUNaLENBQUEscURBQUEsaUJBQUEsTUFBS1QsUUFBUSxjQUFiLHNDQUFBLHVCQUFBLGVBQWVVLEtBQUssY0FBcEIsNENBQUEsZ0NBQUEscUJBQXNCQyxRQUFRLGdCQUE5QixxREFBQSx5Q0FBQSw4QkFBa0NDLFFBQVEsY0FBMUMsOERBQUEsMENBQUEsc0NBQTRDLENBQUMsRUFBRSxjQUEvQyw4REFBQSx3Q0FBaURILFNBQVMsY0FBMUQsK0RBQUEsb0RBQThEO1lBQ2xFO1lBRUEsT0FBT0Y7UUFDVDs7SUFFTU07O2VBQU4sb0JBQUE7WUFDRSxJQUFJLENBQUMsTUFBS2IsUUFBUSxJQUFJYyxRQUFRLE1BQUtMLFNBQVMsR0FBRztZQUUvQyxNQUFLRCxNQUFNLEdBQUcsTUFBTSxNQUFLUixRQUFRLENBQUNRLE1BQU0sQ0FBQ08sb0JBQWEsQ0FBQ0MsWUFBWTtZQUNuRSxNQUFNLE1BQUtSLE1BQU0sQ0FBQ0ssTUFBTSxDQUFDO2dCQUN2QkksWUFBWSxNQUFLQyxrQkFBa0I7Z0JBQ25DQyxhQUFhLEVBQUU7Z0JBQ2ZQLFVBQVUsRUFBRTtZQUNkO1FBQ0Y7O0lBRU1ROztlQUFOLG9CQUFBO1lBQ0UsSUFBSSxDQUFDLE1BQUtaLE1BQU0sRUFBRTtZQUVsQixNQUFNLE1BQUtBLE1BQU0sQ0FBQ1ksT0FBTztZQUN6QixNQUFLWixNQUFNLEdBQUc7WUFDZCxNQUFLQyxTQUFTLEdBQUc7UUFDbkI7O0lBRU1ZLGVBQ0pDLE1BQXlCOztlQUQzQixvQkFBQTtZQUdFLElBQUksQ0FBQyxNQUFLZCxNQUFNLEVBQUUsT0FBTyxFQUFFO1lBRTNCLE1BQU1lLFVBQVUsTUFBTSxNQUFLZixNQUFNLENBQUNnQix1QkFBdUIsQ0FBQ0Y7WUFFMUQsT0FBT0MsV0FBVyxFQUFFO1FBQ3RCOztJQWhEQUUsWUFBWSxFQUFFUCxxQkFBcUIsRUFBRSxFQUFtQyxDQUFFO1FBTjFFbEIsdUJBQUFBLFlBQWtDO1FBQ2xDUSx1QkFBQUEsVUFBd0I7UUFDeEJVLHVCQUFBQSxzQkFBQUEsS0FBQUE7UUFDQVQsdUJBQUFBLGFBQVk7UUFDWmlCLHVCQUFBQSxVQUFTO1FBR1AsSUFBSSxDQUFDUixrQkFBa0IsR0FBR0E7SUFDNUI7QUErQ0YifQ==