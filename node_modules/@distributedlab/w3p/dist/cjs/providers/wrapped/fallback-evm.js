"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "FallbackEvmProvider", {
    enumerable: true,
    get: function() {
        return FallbackEvmProvider;
    }
});
const _enums = require("../../enums");
const _helpers = require("../../helpers");
const _eventbus = require("./_event-bus");
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
let FallbackEvmProvider = class FallbackEvmProvider extends _eventbus.ProviderEventBus {
    static get providerType() {
        return _enums.PROVIDERS.Fallback;
    }
    get chainType() {
        return _enums.CHAIN_TYPES.EVM;
    }
    get isConnected() {
        return Boolean(this.chainId);
    }
    get defaultEventPayload() {
        return {
            address: this.address,
            chainId: this.chainId,
            isConnected: this.isConnected
        };
    }
    init() {
        var _this = this;
        return _async_to_generator(function*() {
            const network = yield _this.provider.getNetwork();
            _this.chainId = (0, _helpers.hexToDecimal)(network.chainId);
            _this.emit(_enums.PROVIDER_EVENT_BUS_EVENTS.Initiated, _this.defaultEventPayload);
        })();
    }
    getAddressUrl(chain, address) {
        return (0, _helpers.getEthExplorerAddressUrl)(chain, address);
    }
    getTxUrl(chain, txHash) {
        return (0, _helpers.getEthExplorerTxUrl)(chain, txHash);
    }
    getHashFromTx(txResponse) {
        return txResponse.transactionHash;
    }
    constructor(provider){
        super();
        _define_property(this, "provider", void 0);
        _define_property(this, "rawProvider", void 0);
        _define_property(this, "chainId", void 0);
        _define_property(this, "address", void 0);
        this.provider = provider;
        this.rawProvider = provider;
    }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvd3JhcHBlZC9mYWxsYmFjay1ldm0udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHJvdmlkZXJzIH0gZnJvbSAnZXRoZXJzJ1xuXG5pbXBvcnQgeyBDSEFJTl9UWVBFUywgUFJPVklERVJfRVZFTlRfQlVTX0VWRU5UUywgUFJPVklERVJTIH0gZnJvbSAnQC9lbnVtcydcbmltcG9ydCB7XG4gIGdldEV0aEV4cGxvcmVyQWRkcmVzc1VybCxcbiAgZ2V0RXRoRXhwbG9yZXJUeFVybCxcbiAgaGV4VG9EZWNpbWFsLFxufSBmcm9tICdAL2hlbHBlcnMnXG5pbXBvcnQgdHlwZSB7XG4gIENoYWluLFxuICBDaGFpbklkLFxuICBFdGhUcmFuc2FjdGlvblJlc3BvbnNlLFxuICBQcm92aWRlclByb3h5LFxuICBSYXdQcm92aWRlcixcbiAgU29sYW5hVHJhbnNhY3Rpb25SZXNwb25zZSxcbiAgVHJhbnNhY3Rpb25SZXNwb25zZSxcbn0gZnJvbSAnQC90eXBlcydcblxuaW1wb3J0IHsgUHJvdmlkZXJFdmVudEJ1cyB9IGZyb20gJy4vX2V2ZW50LWJ1cydcblxuZXhwb3J0IGNsYXNzIEZhbGxiYWNrRXZtUHJvdmlkZXJcbiAgZXh0ZW5kcyBQcm92aWRlckV2ZW50QnVzXG4gIGltcGxlbWVudHMgUHJvdmlkZXJQcm94eVxue1xuICBwcm92aWRlcjogcHJvdmlkZXJzLldlYjNQcm92aWRlclxuICByYXdQcm92aWRlcjogUmF3UHJvdmlkZXJcblxuICBjaGFpbklkPzogQ2hhaW5JZFxuICBhZGRyZXNzPzogc3RyaW5nXG5cbiAgY29uc3RydWN0b3IocHJvdmlkZXI6IFJhd1Byb3ZpZGVyKSB7XG4gICAgc3VwZXIoKVxuXG4gICAgdGhpcy5wcm92aWRlciA9IHByb3ZpZGVyIGFzIHVua25vd24gYXMgcHJvdmlkZXJzLldlYjNQcm92aWRlclxuICAgIHRoaXMucmF3UHJvdmlkZXIgPSBwcm92aWRlclxuICB9XG5cbiAgc3RhdGljIGdldCBwcm92aWRlclR5cGUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gUFJPVklERVJTLkZhbGxiYWNrXG4gIH1cblxuICBnZXQgY2hhaW5UeXBlKCk6IENIQUlOX1RZUEVTIHtcbiAgICByZXR1cm4gQ0hBSU5fVFlQRVMuRVZNXG4gIH1cblxuICBnZXQgaXNDb25uZWN0ZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIEJvb2xlYW4odGhpcy5jaGFpbklkKVxuICB9XG5cbiAgZ2V0IGRlZmF1bHRFdmVudFBheWxvYWQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGFkZHJlc3M6IHRoaXMuYWRkcmVzcyxcbiAgICAgIGNoYWluSWQ6IHRoaXMuY2hhaW5JZCxcbiAgICAgIGlzQ29ubmVjdGVkOiB0aGlzLmlzQ29ubmVjdGVkLFxuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGluaXQoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgY29uc3QgbmV0d29yayA9IGF3YWl0IHRoaXMucHJvdmlkZXIuZ2V0TmV0d29yaygpXG5cbiAgICB0aGlzLmNoYWluSWQgPSBoZXhUb0RlY2ltYWwobmV0d29yay5jaGFpbklkIGFzIENoYWluSWQpXG5cbiAgICB0aGlzLmVtaXQoUFJPVklERVJfRVZFTlRfQlVTX0VWRU5UUy5Jbml0aWF0ZWQsIHRoaXMuZGVmYXVsdEV2ZW50UGF5bG9hZClcbiAgfVxuXG4gIGdldEFkZHJlc3NVcmwoY2hhaW46IENoYWluLCBhZGRyZXNzOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiBnZXRFdGhFeHBsb3JlckFkZHJlc3NVcmwoY2hhaW4sIGFkZHJlc3MpXG4gIH1cblxuICBnZXRUeFVybChjaGFpbjogQ2hhaW4sIHR4SGFzaDogc3RyaW5nKTogc3RyaW5nIHtcbiAgICByZXR1cm4gZ2V0RXRoRXhwbG9yZXJUeFVybChjaGFpbiwgdHhIYXNoKVxuICB9XG5cbiAgZ2V0SGFzaEZyb21UeCh0eFJlc3BvbnNlOiBUcmFuc2FjdGlvblJlc3BvbnNlKTogc3RyaW5nIHtcbiAgICByZXR1cm4gKHR4UmVzcG9uc2UgYXMgRXRoVHJhbnNhY3Rpb25SZXNwb25zZSlcbiAgICAgIC50cmFuc2FjdGlvbkhhc2ggYXMgU29sYW5hVHJhbnNhY3Rpb25SZXNwb25zZVxuICB9XG59XG4iXSwibmFtZXMiOlsiRmFsbGJhY2tFdm1Qcm92aWRlciIsIlByb3ZpZGVyRXZlbnRCdXMiLCJwcm92aWRlclR5cGUiLCJQUk9WSURFUlMiLCJGYWxsYmFjayIsImNoYWluVHlwZSIsIkNIQUlOX1RZUEVTIiwiRVZNIiwiaXNDb25uZWN0ZWQiLCJCb29sZWFuIiwiY2hhaW5JZCIsImRlZmF1bHRFdmVudFBheWxvYWQiLCJhZGRyZXNzIiwiaW5pdCIsIm5ldHdvcmsiLCJwcm92aWRlciIsImdldE5ldHdvcmsiLCJoZXhUb0RlY2ltYWwiLCJlbWl0IiwiUFJPVklERVJfRVZFTlRfQlVTX0VWRU5UUyIsIkluaXRpYXRlZCIsImdldEFkZHJlc3NVcmwiLCJjaGFpbiIsImdldEV0aEV4cGxvcmVyQWRkcmVzc1VybCIsImdldFR4VXJsIiwidHhIYXNoIiwiZ2V0RXRoRXhwbG9yZXJUeFVybCIsImdldEhhc2hGcm9tVHgiLCJ0eFJlc3BvbnNlIiwidHJhbnNhY3Rpb25IYXNoIiwiY29uc3RydWN0b3IiLCJyYXdQcm92aWRlciJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6Ijs7OzsrQkFvQmFBOzs7ZUFBQUE7Ozt1QkFsQnFEO3lCQUszRDswQkFXMEI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFMUIsSUFBQSxBQUFNQSxzQkFBTixNQUFNQSw0QkFDSEMsMEJBQWdCO0lBZ0J4QixXQUFXQyxlQUF1QjtRQUNoQyxPQUFPQyxnQkFBUyxDQUFDQyxRQUFRO0lBQzNCO0lBRUEsSUFBSUMsWUFBeUI7UUFDM0IsT0FBT0Msa0JBQVcsQ0FBQ0MsR0FBRztJQUN4QjtJQUVBLElBQUlDLGNBQXVCO1FBQ3pCLE9BQU9DLFFBQVEsSUFBSSxDQUFDQyxPQUFPO0lBQzdCO0lBRUEsSUFBSUMsc0JBQXNCO1FBQ3hCLE9BQU87WUFDTEMsU0FBUyxJQUFJLENBQUNBLE9BQU87WUFDckJGLFNBQVMsSUFBSSxDQUFDQSxPQUFPO1lBQ3JCRixhQUFhLElBQUksQ0FBQ0EsV0FBVztRQUMvQjtJQUNGO0lBRU1LOztlQUFOLG9CQUFBO1lBQ0UsTUFBTUMsVUFBVSxNQUFNLE1BQUtDLFFBQVEsQ0FBQ0MsVUFBVTtZQUU5QyxNQUFLTixPQUFPLEdBQUdPLElBQUFBLHFCQUFZLEVBQUNILFFBQVFKLE9BQU87WUFFM0MsTUFBS1EsSUFBSSxDQUFDQyxnQ0FBeUIsQ0FBQ0MsU0FBUyxFQUFFLE1BQUtULG1CQUFtQjtRQUN6RTs7SUFFQVUsY0FBY0MsS0FBWSxFQUFFVixPQUFlLEVBQVU7UUFDbkQsT0FBT1csSUFBQUEsaUNBQXdCLEVBQUNELE9BQU9WO0lBQ3pDO0lBRUFZLFNBQVNGLEtBQVksRUFBRUcsTUFBYyxFQUFVO1FBQzdDLE9BQU9DLElBQUFBLDRCQUFtQixFQUFDSixPQUFPRztJQUNwQztJQUVBRSxjQUFjQyxVQUErQixFQUFVO1FBQ3JELE9BQU8sQUFBQ0EsV0FDTEMsZUFBZTtJQUNwQjtJQTlDQUMsWUFBWWYsUUFBcUIsQ0FBRTtRQUNqQyxLQUFLO1FBUFBBLHVCQUFBQSxZQUFBQSxLQUFBQTtRQUNBZ0IsdUJBQUFBLGVBQUFBLEtBQUFBO1FBRUFyQix1QkFBQUEsV0FBQUEsS0FBQUE7UUFDQUUsdUJBQUFBLFdBQUFBLEtBQUFBO1FBS0UsSUFBSSxDQUFDRyxRQUFRLEdBQUdBO1FBQ2hCLElBQUksQ0FBQ2dCLFdBQVcsR0FBR2hCO0lBQ3JCO0FBMENGIn0=