"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    MAX_GAS_LIMIT: function() {
        return MAX_GAS_LIMIT;
    },
    NO_DEPOSIT: function() {
        return NO_DEPOSIT;
    },
    getNearExplorerAddressUrl: function() {
        return getNearExplorerAddressUrl;
    },
    getNearExplorerTxUrl: function() {
        return getNearExplorerTxUrl;
    },
    handleNearError: function() {
        return handleNearError;
    },
    nearToYocto: function() {
        return nearToYocto;
    },
    yoctoToNear: function() {
        return yoctoToNear;
    }
});
const _nearapijs = require("near-api-js");
const _enums = require("../enums");
const _errors = require("../errors");
const MAX_GAS_LIMIT = '300000000000000';
const NO_DEPOSIT = '0';
const nearToYocto = (amount)=>{
    return _nearapijs.utils.format.parseNearAmount(amount);
};
const yoctoToNear = (amount)=>{
    return _nearapijs.utils.format.formatNearAmount(amount);
};
function getNearExplorerTxUrl(explorerUrl, txHash) {
    return `${explorerUrl}/transactions/${txHash}`;
}
function getNearExplorerAddressUrl(explorerUrl, address) {
    return `${explorerUrl}/accounts/${address}`;
}
function handleNearError(error) {
    switch(error.code){
        case _enums.EIP1193.UserRejectedRequest:
            throw new _errors.errors.ProviderUserRejectedRequest();
        case _enums.EIP1193.Unauthorized:
            throw new _errors.errors.ProviderUnauthorized();
        case _enums.EIP1193.UnsupportedMethod:
            throw new _errors.errors.ProviderUnsupportedMethod();
        case _enums.EIP1193.Disconnected:
            throw new _errors.errors.ProviderDisconnected();
        case _enums.EIP1193.ChainDisconnected:
            throw new _errors.errors.ProviderChainDisconnected();
        case _enums.EIP1474.ParseError:
            throw new _errors.errors.ProviderParseError();
        case _enums.EIP1474.InvalidRequest:
            throw new _errors.errors.ProviderInvalidRequest();
        case _enums.EIP1474.MethodNotFound:
            throw new _errors.errors.ProviderMethodNotFound();
        case _enums.EIP1474.InvalidParams:
            throw new _errors.errors.ProviderInvalidParams();
        case _enums.EIP1474.InternalError:
            throw new _errors.errors.ProviderInternalError();
        case _enums.EIP1474.InvalidInput:
            throw new _errors.errors.ProviderInvalidInput();
        case _enums.EIP1474.ResourceNotFound:
            throw new _errors.errors.ProviderResourceNotFound();
        case _enums.EIP1474.ResourceUnavailable:
            throw new _errors.errors.ProviderResourceUnavailable();
        case _enums.EIP1474.TransactionRejected:
            throw new _errors.errors.ProviderTransactionRejected();
        case _enums.EIP1474.MethodNotSupported:
            throw new _errors.errors.ProviderMethodNotSupported();
        case _enums.EIP1474.LimitExceeded:
            throw new _errors.errors.ProviderLimitExceeded();
        case _enums.EIP1474.JsonRpcVersionNotSupported:
            throw new _errors.errors.ProviderJsonRpcVersionNotSupported();
        default:
            throw error;
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9oZWxwZXJzL25lYXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXRpbHMgfSBmcm9tICduZWFyLWFwaS1qcydcblxuaW1wb3J0IHsgRUlQMTE5MywgRUlQMTQ3NCB9IGZyb20gJ0AvZW51bXMnXG5pbXBvcnQgeyBlcnJvcnMgfSBmcm9tICdAL2Vycm9ycydcbmltcG9ydCB0eXBlIHsgQ2hhaW4sIE5lYXJQcm92aWRlclJwY0Vycm9yIH0gZnJvbSAnQC90eXBlcydcblxuZXhwb3J0IGNvbnN0IE1BWF9HQVNfTElNSVQgPSAnMzAwMDAwMDAwMDAwMDAwJ1xuZXhwb3J0IGNvbnN0IE5PX0RFUE9TSVQgPSAnMCdcblxuZXhwb3J0IGNvbnN0IG5lYXJUb1lvY3RvID0gKGFtb3VudDogc3RyaW5nKTogc3RyaW5nIHwgbnVsbCA9PiB7XG4gIHJldHVybiB1dGlscy5mb3JtYXQucGFyc2VOZWFyQW1vdW50KGFtb3VudClcbn1cblxuZXhwb3J0IGNvbnN0IHlvY3RvVG9OZWFyID0gKGFtb3VudDogc3RyaW5nKTogc3RyaW5nIHwgbnVsbCA9PiB7XG4gIHJldHVybiB1dGlscy5mb3JtYXQuZm9ybWF0TmVhckFtb3VudChhbW91bnQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXROZWFyRXhwbG9yZXJUeFVybChcbiAgZXhwbG9yZXJVcmw6IHN0cmluZyB8IENoYWluLFxuICB0eEhhc2g6IHN0cmluZyxcbik6IHN0cmluZyB7XG4gIHJldHVybiBgJHtleHBsb3JlclVybH0vdHJhbnNhY3Rpb25zLyR7dHhIYXNofWBcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldE5lYXJFeHBsb3JlckFkZHJlc3NVcmwoXG4gIGV4cGxvcmVyVXJsOiBzdHJpbmcgfCBDaGFpbixcbiAgYWRkcmVzczogc3RyaW5nLFxuKTogc3RyaW5nIHtcbiAgcmV0dXJuIGAke2V4cGxvcmVyVXJsfS9hY2NvdW50cy8ke2FkZHJlc3N9YFxufVxuXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlTmVhckVycm9yKGVycm9yOiBOZWFyUHJvdmlkZXJScGNFcnJvcik6IG5ldmVyIHtcbiAgc3dpdGNoIChlcnJvci5jb2RlKSB7XG4gICAgY2FzZSBFSVAxMTkzLlVzZXJSZWplY3RlZFJlcXVlc3Q6XG4gICAgICB0aHJvdyBuZXcgZXJyb3JzLlByb3ZpZGVyVXNlclJlamVjdGVkUmVxdWVzdCgpXG4gICAgY2FzZSBFSVAxMTkzLlVuYXV0aG9yaXplZDpcbiAgICAgIHRocm93IG5ldyBlcnJvcnMuUHJvdmlkZXJVbmF1dGhvcml6ZWQoKVxuICAgIGNhc2UgRUlQMTE5My5VbnN1cHBvcnRlZE1ldGhvZDpcbiAgICAgIHRocm93IG5ldyBlcnJvcnMuUHJvdmlkZXJVbnN1cHBvcnRlZE1ldGhvZCgpXG4gICAgY2FzZSBFSVAxMTkzLkRpc2Nvbm5lY3RlZDpcbiAgICAgIHRocm93IG5ldyBlcnJvcnMuUHJvdmlkZXJEaXNjb25uZWN0ZWQoKVxuICAgIGNhc2UgRUlQMTE5My5DaGFpbkRpc2Nvbm5lY3RlZDpcbiAgICAgIHRocm93IG5ldyBlcnJvcnMuUHJvdmlkZXJDaGFpbkRpc2Nvbm5lY3RlZCgpXG4gICAgY2FzZSBFSVAxNDc0LlBhcnNlRXJyb3I6XG4gICAgICB0aHJvdyBuZXcgZXJyb3JzLlByb3ZpZGVyUGFyc2VFcnJvcigpXG4gICAgY2FzZSBFSVAxNDc0LkludmFsaWRSZXF1ZXN0OlxuICAgICAgdGhyb3cgbmV3IGVycm9ycy5Qcm92aWRlckludmFsaWRSZXF1ZXN0KClcbiAgICBjYXNlIEVJUDE0NzQuTWV0aG9kTm90Rm91bmQ6XG4gICAgICB0aHJvdyBuZXcgZXJyb3JzLlByb3ZpZGVyTWV0aG9kTm90Rm91bmQoKVxuICAgIGNhc2UgRUlQMTQ3NC5JbnZhbGlkUGFyYW1zOlxuICAgICAgdGhyb3cgbmV3IGVycm9ycy5Qcm92aWRlckludmFsaWRQYXJhbXMoKVxuICAgIGNhc2UgRUlQMTQ3NC5JbnRlcm5hbEVycm9yOlxuICAgICAgdGhyb3cgbmV3IGVycm9ycy5Qcm92aWRlckludGVybmFsRXJyb3IoKVxuICAgIGNhc2UgRUlQMTQ3NC5JbnZhbGlkSW5wdXQ6XG4gICAgICB0aHJvdyBuZXcgZXJyb3JzLlByb3ZpZGVySW52YWxpZElucHV0KClcbiAgICBjYXNlIEVJUDE0NzQuUmVzb3VyY2VOb3RGb3VuZDpcbiAgICAgIHRocm93IG5ldyBlcnJvcnMuUHJvdmlkZXJSZXNvdXJjZU5vdEZvdW5kKClcbiAgICBjYXNlIEVJUDE0NzQuUmVzb3VyY2VVbmF2YWlsYWJsZTpcbiAgICAgIHRocm93IG5ldyBlcnJvcnMuUHJvdmlkZXJSZXNvdXJjZVVuYXZhaWxhYmxlKClcbiAgICBjYXNlIEVJUDE0NzQuVHJhbnNhY3Rpb25SZWplY3RlZDpcbiAgICAgIHRocm93IG5ldyBlcnJvcnMuUHJvdmlkZXJUcmFuc2FjdGlvblJlamVjdGVkKClcbiAgICBjYXNlIEVJUDE0NzQuTWV0aG9kTm90U3VwcG9ydGVkOlxuICAgICAgdGhyb3cgbmV3IGVycm9ycy5Qcm92aWRlck1ldGhvZE5vdFN1cHBvcnRlZCgpXG4gICAgY2FzZSBFSVAxNDc0LkxpbWl0RXhjZWVkZWQ6XG4gICAgICB0aHJvdyBuZXcgZXJyb3JzLlByb3ZpZGVyTGltaXRFeGNlZWRlZCgpXG4gICAgY2FzZSBFSVAxNDc0Lkpzb25ScGNWZXJzaW9uTm90U3VwcG9ydGVkOlxuICAgICAgdGhyb3cgbmV3IGVycm9ycy5Qcm92aWRlckpzb25ScGNWZXJzaW9uTm90U3VwcG9ydGVkKClcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgZXJyb3JcbiAgfVxufVxuIl0sIm5hbWVzIjpbIk1BWF9HQVNfTElNSVQiLCJOT19ERVBPU0lUIiwiZ2V0TmVhckV4cGxvcmVyQWRkcmVzc1VybCIsImdldE5lYXJFeHBsb3JlclR4VXJsIiwiaGFuZGxlTmVhckVycm9yIiwibmVhclRvWW9jdG8iLCJ5b2N0b1RvTmVhciIsImFtb3VudCIsInV0aWxzIiwiZm9ybWF0IiwicGFyc2VOZWFyQW1vdW50IiwiZm9ybWF0TmVhckFtb3VudCIsImV4cGxvcmVyVXJsIiwidHhIYXNoIiwiYWRkcmVzcyIsImVycm9yIiwiY29kZSIsIkVJUDExOTMiLCJVc2VyUmVqZWN0ZWRSZXF1ZXN0IiwiZXJyb3JzIiwiUHJvdmlkZXJVc2VyUmVqZWN0ZWRSZXF1ZXN0IiwiVW5hdXRob3JpemVkIiwiUHJvdmlkZXJVbmF1dGhvcml6ZWQiLCJVbnN1cHBvcnRlZE1ldGhvZCIsIlByb3ZpZGVyVW5zdXBwb3J0ZWRNZXRob2QiLCJEaXNjb25uZWN0ZWQiLCJQcm92aWRlckRpc2Nvbm5lY3RlZCIsIkNoYWluRGlzY29ubmVjdGVkIiwiUHJvdmlkZXJDaGFpbkRpc2Nvbm5lY3RlZCIsIkVJUDE0NzQiLCJQYXJzZUVycm9yIiwiUHJvdmlkZXJQYXJzZUVycm9yIiwiSW52YWxpZFJlcXVlc3QiLCJQcm92aWRlckludmFsaWRSZXF1ZXN0IiwiTWV0aG9kTm90Rm91bmQiLCJQcm92aWRlck1ldGhvZE5vdEZvdW5kIiwiSW52YWxpZFBhcmFtcyIsIlByb3ZpZGVySW52YWxpZFBhcmFtcyIsIkludGVybmFsRXJyb3IiLCJQcm92aWRlckludGVybmFsRXJyb3IiLCJJbnZhbGlkSW5wdXQiLCJQcm92aWRlckludmFsaWRJbnB1dCIsIlJlc291cmNlTm90Rm91bmQiLCJQcm92aWRlclJlc291cmNlTm90Rm91bmQiLCJSZXNvdXJjZVVuYXZhaWxhYmxlIiwiUHJvdmlkZXJSZXNvdXJjZVVuYXZhaWxhYmxlIiwiVHJhbnNhY3Rpb25SZWplY3RlZCIsIlByb3ZpZGVyVHJhbnNhY3Rpb25SZWplY3RlZCIsIk1ldGhvZE5vdFN1cHBvcnRlZCIsIlByb3ZpZGVyTWV0aG9kTm90U3VwcG9ydGVkIiwiTGltaXRFeGNlZWRlZCIsIlByb3ZpZGVyTGltaXRFeGNlZWRlZCIsIkpzb25ScGNWZXJzaW9uTm90U3VwcG9ydGVkIiwiUHJvdmlkZXJKc29uUnBjVmVyc2lvbk5vdFN1cHBvcnRlZCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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