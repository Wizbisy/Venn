import { PROVIDERS } from '../../enums';
import type { ProviderProxy, RawProvider, TransactionResponse, TxRequestBody } from '../../types';
import { BaseSolanaProvider } from './_base-solana';
/**
 * @description Represents a Solflare wallet.
 *
 * @example
 * ```js
 * import { createProvider, SolflareProvider } from '@rarimo/provider'
 *
 * const getSolflareWalletAddress = async () => {
 *   // Connect to the Solflare wallet in the browser using Web3.js, using the SolflareProvider interface to limit bundle size.
 *   const provider = await createProvider(SolflareProvider)
 *   await provider.connect()
 *
 *   // Get the address of the wallet
 *   console.log(provider.address)
 * }
 * ```
 */
export declare class SolflareProvider extends BaseSolanaProvider implements ProviderProxy {
    constructor(provider: RawProvider);
    static get providerType(): PROVIDERS;
    signAndSendTx(txRequestBody: TxRequestBody): Promise<TransactionResponse>;
}
