import { providers } from 'ethers';
import { CHAIN_TYPES } from '../../enums';
import type { Chain, ChainId, ProviderProxy, RawProvider, TransactionResponse } from '../../types';
import { ProviderEventBus } from './_event-bus';
export declare class FallbackEvmProvider extends ProviderEventBus implements ProviderProxy {
    provider: providers.Web3Provider;
    rawProvider: RawProvider;
    chainId?: ChainId;
    address?: string;
    constructor(provider: RawProvider);
    static get providerType(): string;
    get chainType(): CHAIN_TYPES;
    get isConnected(): boolean;
    get defaultEventPayload(): {
        address: string | undefined;
        chainId: ChainId | undefined;
        isConnected: boolean;
    };
    init(): Promise<void>;
    getAddressUrl(chain: Chain, address: string): string;
    getTxUrl(chain: Chain, txHash: string): string;
    getHashFromTx(txResponse: TransactionResponse): string;
}
