"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    getTens: function() {
        return getTens;
    },
    toDecimals: function() {
        return toDecimals;
    },
    toGreaterDecimals: function() {
        return toGreaterDecimals;
    },
    toLessDecimals: function() {
        return toLessDecimals;
    }
});
const _enums = require("../enums");
const _assertions = require("./assertions");
const toDecimals = (val, currentDecimals, targetDecimals)=>{
    return targetDecimals > currentDecimals ? toGreaterDecimals(val, currentDecimals, targetDecimals) : toLessDecimals(val, currentDecimals, targetDecimals);
};
const toGreaterDecimals = (val, currentDecimals, targetDecimals)=>{
    (0, _assertions.assertDecimals)(currentDecimals, targetDecimals, _enums.BN_ASSERT_DECIMALS_OP.GREATER);
    return val * 10n ** BigInt(targetDecimals - currentDecimals);
};
const toLessDecimals = (val, currentDecimals, targetDecimals)=>{
    (0, _assertions.assertDecimals)(currentDecimals, targetDecimals, _enums.BN_ASSERT_DECIMALS_OP.LESS);
    return val / 10n ** BigInt(currentDecimals - targetDecimals);
};
const getTens = (precision)=>{
    return 10n ** BigInt(precision);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ibi9kZWNpbWFscy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCTl9BU1NFUlRfREVDSU1BTFNfT1AgfSBmcm9tICdAL2VudW1zJ1xuXG5pbXBvcnQgeyBhc3NlcnREZWNpbWFscyB9IGZyb20gJy4vYXNzZXJ0aW9ucydcblxuZXhwb3J0IGNvbnN0IHRvRGVjaW1hbHMgPSAoXG4gIHZhbDogYmlnaW50LFxuICBjdXJyZW50RGVjaW1hbHM6IG51bWJlcixcbiAgdGFyZ2V0RGVjaW1hbHM6IG51bWJlcixcbik6IGJpZ2ludCA9PiB7XG4gIHJldHVybiB0YXJnZXREZWNpbWFscyA+IGN1cnJlbnREZWNpbWFsc1xuICAgID8gdG9HcmVhdGVyRGVjaW1hbHModmFsLCBjdXJyZW50RGVjaW1hbHMsIHRhcmdldERlY2ltYWxzKVxuICAgIDogdG9MZXNzRGVjaW1hbHModmFsLCBjdXJyZW50RGVjaW1hbHMsIHRhcmdldERlY2ltYWxzKVxufVxuXG5leHBvcnQgY29uc3QgdG9HcmVhdGVyRGVjaW1hbHMgPSAoXG4gIHZhbDogYmlnaW50LFxuICBjdXJyZW50RGVjaW1hbHM6IG51bWJlcixcbiAgdGFyZ2V0RGVjaW1hbHM6IG51bWJlcixcbik6IGJpZ2ludCA9PiB7XG4gIGFzc2VydERlY2ltYWxzKGN1cnJlbnREZWNpbWFscywgdGFyZ2V0RGVjaW1hbHMsIEJOX0FTU0VSVF9ERUNJTUFMU19PUC5HUkVBVEVSKVxuICByZXR1cm4gdmFsICogMTBuICoqIEJpZ0ludCh0YXJnZXREZWNpbWFscyAtIGN1cnJlbnREZWNpbWFscylcbn1cblxuZXhwb3J0IGNvbnN0IHRvTGVzc0RlY2ltYWxzID0gKFxuICB2YWw6IGJpZ2ludCxcbiAgY3VycmVudERlY2ltYWxzOiBudW1iZXIsXG4gIHRhcmdldERlY2ltYWxzOiBudW1iZXIsXG4pOiBiaWdpbnQgPT4ge1xuICBhc3NlcnREZWNpbWFscyhjdXJyZW50RGVjaW1hbHMsIHRhcmdldERlY2ltYWxzLCBCTl9BU1NFUlRfREVDSU1BTFNfT1AuTEVTUylcbiAgcmV0dXJuIHZhbCAvIDEwbiAqKiBCaWdJbnQoY3VycmVudERlY2ltYWxzIC0gdGFyZ2V0RGVjaW1hbHMpXG59XG5cbmV4cG9ydCBjb25zdCBnZXRUZW5zID0gKHByZWNpc2lvbjogbnVtYmVyKTogYmlnaW50ID0+IHtcbiAgcmV0dXJuIDEwbiAqKiBCaWdJbnQocHJlY2lzaW9uKVxufVxuIl0sIm5hbWVzIjpbImdldFRlbnMiLCJ0b0RlY2ltYWxzIiwidG9HcmVhdGVyRGVjaW1hbHMiLCJ0b0xlc3NEZWNpbWFscyIsInZhbCIsImN1cnJlbnREZWNpbWFscyIsInRhcmdldERlY2ltYWxzIiwiYXNzZXJ0RGVjaW1hbHMiLCJCTl9BU1NFUlRfREVDSU1BTFNfT1AiLCJHUkVBVEVSIiwiQmlnSW50IiwiTEVTUyIsInByZWNpc2lvbiJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBZ0NhQSxPQUFPO2VBQVBBOztJQTVCQUMsVUFBVTtlQUFWQTs7SUFVQUMsaUJBQWlCO2VBQWpCQTs7SUFTQUMsY0FBYztlQUFkQTs7O3VCQXZCeUI7NEJBRVA7QUFFeEIsTUFBTUYsYUFBYSxDQUN4QkcsS0FDQUMsaUJBQ0FDO0lBRUEsT0FBT0EsaUJBQWlCRCxrQkFDcEJILGtCQUFrQkUsS0FBS0MsaUJBQWlCQyxrQkFDeENILGVBQWVDLEtBQUtDLGlCQUFpQkM7QUFDM0M7QUFFTyxNQUFNSixvQkFBb0IsQ0FDL0JFLEtBQ0FDLGlCQUNBQztJQUVBQyxJQUFBQSwwQkFBYyxFQUFDRixpQkFBaUJDLGdCQUFnQkUsNEJBQXFCLENBQUNDLE9BQU87SUFDN0UsT0FBT0wsTUFBTSxHQUFHLElBQUlNLE9BQU9KLGlCQUFpQkQ7QUFDOUM7QUFFTyxNQUFNRixpQkFBaUIsQ0FDNUJDLEtBQ0FDLGlCQUNBQztJQUVBQyxJQUFBQSwwQkFBYyxFQUFDRixpQkFBaUJDLGdCQUFnQkUsNEJBQXFCLENBQUNHLElBQUk7SUFDMUUsT0FBT1AsTUFBTSxHQUFHLElBQUlNLE9BQU9MLGtCQUFrQkM7QUFDL0M7QUFFTyxNQUFNTixVQUFVLENBQUNZO0lBQ3RCLE9BQU8sR0FBRyxJQUFJRixPQUFPRTtBQUN2QiJ9