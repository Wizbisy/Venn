import { BN_ASSERT_DECIMALS_OP } from "../enums";
import { assert } from "../helpers";
import { BN } from "./bn";
export const assertDecimals = (currentDecimals, targetDecimals, op)=>{
    assertDecimalsInteger(currentDecimals);
    assert(targetDecimals < BN.precision, 'Target decimals cannot be greater than the BN config precision');
    if (op === BN_ASSERT_DECIMALS_OP.GREATER) {
        assert(targetDecimals > currentDecimals, 'Target decimals cannot be less than the current decimals');
        return;
    }
    assert(targetDecimals < currentDecimals, 'Target decimals cannot be greater than the current decimals');
};
export const assertDecimalsInteger = (decimals)=>{
    assert(Number.isInteger(decimals), 'Decimals must be an integer');
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ibi9hc3NlcnRpb25zLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJOX0FTU0VSVF9ERUNJTUFMU19PUCB9IGZyb20gJ0AvZW51bXMnXG5pbXBvcnQgeyBhc3NlcnQgfSBmcm9tICdAL2hlbHBlcnMnXG5cbmltcG9ydCB7IEJOIH0gZnJvbSAnLi9ibidcblxuZXhwb3J0IGNvbnN0IGFzc2VydERlY2ltYWxzID0gKFxuICBjdXJyZW50RGVjaW1hbHM6IG51bWJlcixcbiAgdGFyZ2V0RGVjaW1hbHM6IG51bWJlcixcbiAgb3A6IEJOX0FTU0VSVF9ERUNJTUFMU19PUCxcbikgPT4ge1xuICBhc3NlcnREZWNpbWFsc0ludGVnZXIoY3VycmVudERlY2ltYWxzKVxuXG4gIGFzc2VydChcbiAgICB0YXJnZXREZWNpbWFscyA8IEJOLnByZWNpc2lvbixcbiAgICAnVGFyZ2V0IGRlY2ltYWxzIGNhbm5vdCBiZSBncmVhdGVyIHRoYW4gdGhlIEJOIGNvbmZpZyBwcmVjaXNpb24nLFxuICApXG5cbiAgaWYgKG9wID09PSBCTl9BU1NFUlRfREVDSU1BTFNfT1AuR1JFQVRFUikge1xuICAgIGFzc2VydChcbiAgICAgIHRhcmdldERlY2ltYWxzID4gY3VycmVudERlY2ltYWxzLFxuICAgICAgJ1RhcmdldCBkZWNpbWFscyBjYW5ub3QgYmUgbGVzcyB0aGFuIHRoZSBjdXJyZW50IGRlY2ltYWxzJyxcbiAgICApXG4gICAgcmV0dXJuXG4gIH1cblxuICBhc3NlcnQoXG4gICAgdGFyZ2V0RGVjaW1hbHMgPCBjdXJyZW50RGVjaW1hbHMsXG4gICAgJ1RhcmdldCBkZWNpbWFscyBjYW5ub3QgYmUgZ3JlYXRlciB0aGFuIHRoZSBjdXJyZW50IGRlY2ltYWxzJyxcbiAgKVxufVxuXG5leHBvcnQgY29uc3QgYXNzZXJ0RGVjaW1hbHNJbnRlZ2VyID0gKGRlY2ltYWxzOiBudW1iZXIpID0+IHtcbiAgYXNzZXJ0KE51bWJlci5pc0ludGVnZXIoZGVjaW1hbHMpLCAnRGVjaW1hbHMgbXVzdCBiZSBhbiBpbnRlZ2VyJylcbn1cbiJdLCJuYW1lcyI6WyJCTl9BU1NFUlRfREVDSU1BTFNfT1AiLCJhc3NlcnQiLCJCTiIsImFzc2VydERlY2ltYWxzIiwiY3VycmVudERlY2ltYWxzIiwidGFyZ2V0RGVjaW1hbHMiLCJvcCIsImFzc2VydERlY2ltYWxzSW50ZWdlciIsInByZWNpc2lvbiIsIkdSRUFURVIiLCJkZWNpbWFscyIsIk51bWJlciIsImlzSW50ZWdlciJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EscUJBQXFCLFFBQVEsV0FBUztBQUMvQyxTQUFTQyxNQUFNLFFBQVEsYUFBVztBQUVsQyxTQUFTQyxFQUFFLFFBQVEsT0FBTTtBQUV6QixPQUFPLE1BQU1DLGlCQUFpQixDQUM1QkMsaUJBQ0FDLGdCQUNBQztJQUVBQyxzQkFBc0JIO0lBRXRCSCxPQUNFSSxpQkFBaUJILEdBQUdNLFNBQVMsRUFDN0I7SUFHRixJQUFJRixPQUFPTixzQkFBc0JTLE9BQU8sRUFBRTtRQUN4Q1IsT0FDRUksaUJBQWlCRCxpQkFDakI7UUFFRjtJQUNGO0lBRUFILE9BQ0VJLGlCQUFpQkQsaUJBQ2pCO0FBRUosRUFBQztBQUVELE9BQU8sTUFBTUcsd0JBQXdCLENBQUNHO0lBQ3BDVCxPQUFPVSxPQUFPQyxTQUFTLENBQUNGLFdBQVc7QUFDckMsRUFBQyJ9