function _check_private_redeclaration(obj, privateCollection) {
    if (privateCollection.has(obj)) {
        throw new TypeError("Cannot initialize the same private elements twice on an object");
    }
}
function _class_apply_descriptor_get(receiver, descriptor) {
    if (descriptor.get) {
        return descriptor.get.call(receiver);
    }
    return descriptor.value;
}
function _class_apply_descriptor_set(receiver, descriptor, value) {
    if (descriptor.set) {
        descriptor.set.call(receiver, value);
    } else {
        if (!descriptor.writable) {
            throw new TypeError("attempted to set read only private field");
        }
        descriptor.value = value;
    }
}
function _class_extract_field_descriptor(receiver, privateMap, action) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to " + action + " private field on non-instance");
    }
    return privateMap.get(receiver);
}
function _class_private_field_get(receiver, privateMap) {
    var descriptor = _class_extract_field_descriptor(receiver, privateMap, "get");
    return _class_apply_descriptor_get(receiver, descriptor);
}
function _class_private_field_init(obj, privateMap, value) {
    _check_private_redeclaration(obj, privateMap);
    privateMap.set(obj, value);
}
function _class_private_field_set(receiver, privateMap, value) {
    var descriptor = _class_extract_field_descriptor(receiver, privateMap, "set");
    _class_apply_descriptor_set(receiver, descriptor, value);
    return value;
}
import dayjs from "dayjs";
import durationlib from "dayjs/plugin/duration";
dayjs.extend(durationlib);
var _duration = new WeakMap();
export class Duration {
    _duration(input, unit) {
        if (typeof input == 'number') return dayjs.duration(input, unit);
        if (typeof input == 'string') return dayjs.duration(input);
        return dayjs.duration(input);
    }
    get duration() {
        return _class_private_field_get(this, _duration);
    }
    get asMilliseconds() {
        return _class_private_field_get(this, _duration).asMilliseconds();
    }
    get milliseconds() {
        return _class_private_field_get(this, _duration).milliseconds();
    }
    get asSeconds() {
        return _class_private_field_get(this, _duration).asSeconds();
    }
    get seconds() {
        return _class_private_field_get(this, _duration).seconds();
    }
    get asMinutes() {
        return _class_private_field_get(this, _duration).asMinutes();
    }
    get minutes() {
        return _class_private_field_get(this, _duration).minutes();
    }
    get asHours() {
        return _class_private_field_get(this, _duration).asHours();
    }
    get hours() {
        return _class_private_field_get(this, _duration).hours();
    }
    get asDays() {
        return _class_private_field_get(this, _duration).asDays();
    }
    get days() {
        return _class_private_field_get(this, _duration).days();
    }
    get asWeeks() {
        return _class_private_field_get(this, _duration).asWeeks();
    }
    get weeks() {
        return _class_private_field_get(this, _duration).weeks();
    }
    get asMonths() {
        return _class_private_field_get(this, _duration).asMonths();
    }
    get months() {
        return _class_private_field_get(this, _duration).months();
    }
    get asYears() {
        return _class_private_field_get(this, _duration).asYears();
    }
    get years() {
        return _class_private_field_get(this, _duration).years();
    }
    get humanized() {
        return _class_private_field_get(this, _duration).humanize();
    }
    format(formatStr) {
        return _class_private_field_get(this, _duration).format(formatStr);
    }
    constructor(input, unit){
        _class_private_field_init(this, _duration, {
            writable: true,
            value: void 0
        });
        _class_private_field_set(this, _duration, this._duration(input, unit));
    }
}
export function duration(input, unit) {
    return new Duration(input, unit);
} /*#__PURE__*/ 

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kdXJhdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGF5anMgZnJvbSAnZGF5anMnXG5pbXBvcnQgdHlwZSB7IER1cmF0aW9uIGFzIF9EdXJhdGlvbiB9IGZyb20gJ2RheWpzL3BsdWdpbi9kdXJhdGlvbidcbmltcG9ydCBkdXJhdGlvbmxpYiBmcm9tICdkYXlqcy9wbHVnaW4vZHVyYXRpb24nXG5cbmltcG9ydCB0eXBlIHsgRHVyYXRpb25Vbml0c09iamVjdCwgRHVyYXRpb25Vbml0VHlwZSB9IGZyb20gJ0AvdHlwZXMnXG5cbmRheWpzLmV4dGVuZChkdXJhdGlvbmxpYilcblxuZXhwb3J0IGNsYXNzIER1cmF0aW9uIHtcbiAgcmVhZG9ubHkgI2R1cmF0aW9uOiBfRHVyYXRpb25cblxuICBjb25zdHJ1Y3RvcihcbiAgICBpbnB1dDogRHVyYXRpb25Vbml0c09iamVjdCB8IG51bWJlciB8IHN0cmluZyB8IHVuZGVmaW5lZCxcbiAgICB1bml0PzogRHVyYXRpb25Vbml0VHlwZSB8IHVuZGVmaW5lZCxcbiAgKSB7XG4gICAgdGhpcy4jZHVyYXRpb24gPSB0aGlzLl9kdXJhdGlvbihpbnB1dCwgdW5pdClcbiAgfVxuXG4gIHByaXZhdGUgX2R1cmF0aW9uKFxuICAgIGlucHV0PzogRHVyYXRpb25Vbml0c09iamVjdCB8IG51bWJlciB8IHN0cmluZyxcbiAgICB1bml0PzogRHVyYXRpb25Vbml0VHlwZSxcbiAgKTogX0R1cmF0aW9uIHtcbiAgICBpZiAodHlwZW9mIGlucHV0ID09ICdudW1iZXInKSByZXR1cm4gZGF5anMuZHVyYXRpb24oaW5wdXQgYXMgbnVtYmVyLCB1bml0KVxuXG4gICAgaWYgKHR5cGVvZiBpbnB1dCA9PSAnc3RyaW5nJykgcmV0dXJuIGRheWpzLmR1cmF0aW9uKGlucHV0IGFzIHN0cmluZylcblxuICAgIHJldHVybiBkYXlqcy5kdXJhdGlvbihpbnB1dCBhcyBEdXJhdGlvblVuaXRzT2JqZWN0KVxuICB9XG5cbiAgcHVibGljIGdldCBkdXJhdGlvbigpOiBfRHVyYXRpb24ge1xuICAgIHJldHVybiB0aGlzLiNkdXJhdGlvblxuICB9XG5cbiAgcHVibGljIGdldCBhc01pbGxpc2Vjb25kcygpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLiNkdXJhdGlvbi5hc01pbGxpc2Vjb25kcygpXG4gIH1cblxuICBwdWJsaWMgZ2V0IG1pbGxpc2Vjb25kcygpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLiNkdXJhdGlvbi5taWxsaXNlY29uZHMoKVxuICB9XG5cbiAgcHVibGljIGdldCBhc1NlY29uZHMoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy4jZHVyYXRpb24uYXNTZWNvbmRzKClcbiAgfVxuXG4gIHB1YmxpYyBnZXQgc2Vjb25kcygpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLiNkdXJhdGlvbi5zZWNvbmRzKClcbiAgfVxuXG4gIHB1YmxpYyBnZXQgYXNNaW51dGVzKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuI2R1cmF0aW9uLmFzTWludXRlcygpXG4gIH1cblxuICBwdWJsaWMgZ2V0IG1pbnV0ZXMoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy4jZHVyYXRpb24ubWludXRlcygpXG4gIH1cblxuICBwdWJsaWMgZ2V0IGFzSG91cnMoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy4jZHVyYXRpb24uYXNIb3VycygpXG4gIH1cblxuICBwdWJsaWMgZ2V0IGhvdXJzKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuI2R1cmF0aW9uLmhvdXJzKClcbiAgfVxuXG4gIHB1YmxpYyBnZXQgYXNEYXlzKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuI2R1cmF0aW9uLmFzRGF5cygpXG4gIH1cblxuICBwdWJsaWMgZ2V0IGRheXMoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy4jZHVyYXRpb24uZGF5cygpXG4gIH1cblxuICBwdWJsaWMgZ2V0IGFzV2Vla3MoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy4jZHVyYXRpb24uYXNXZWVrcygpXG4gIH1cblxuICBwdWJsaWMgZ2V0IHdlZWtzKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuI2R1cmF0aW9uLndlZWtzKClcbiAgfVxuXG4gIHB1YmxpYyBnZXQgYXNNb250aHMoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy4jZHVyYXRpb24uYXNNb250aHMoKVxuICB9XG5cbiAgcHVibGljIGdldCBtb250aHMoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy4jZHVyYXRpb24ubW9udGhzKClcbiAgfVxuXG4gIHB1YmxpYyBnZXQgYXNZZWFycygpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLiNkdXJhdGlvbi5hc1llYXJzKClcbiAgfVxuXG4gIHB1YmxpYyBnZXQgeWVhcnMoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy4jZHVyYXRpb24ueWVhcnMoKVxuICB9XG5cbiAgcHVibGljIGdldCBodW1hbml6ZWQoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy4jZHVyYXRpb24uaHVtYW5pemUoKVxuICB9XG5cbiAgcHVibGljIGZvcm1hdChmb3JtYXRTdHI/OiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLiNkdXJhdGlvbi5mb3JtYXQoZm9ybWF0U3RyKVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkdXJhdGlvbih1bml0czogRHVyYXRpb25Vbml0c09iamVjdCk6IER1cmF0aW9uXG5leHBvcnQgZnVuY3Rpb24gZHVyYXRpb24odGltZTogbnVtYmVyLCB1bml0PzogRHVyYXRpb25Vbml0VHlwZSk6IER1cmF0aW9uXG5leHBvcnQgZnVuY3Rpb24gZHVyYXRpb24oSVNPXzg2MDE6IHN0cmluZyk6IER1cmF0aW9uXG5leHBvcnQgZnVuY3Rpb24gZHVyYXRpb24oXG4gIGlucHV0PzogRHVyYXRpb25Vbml0c09iamVjdCB8IG51bWJlciB8IHN0cmluZyxcbiAgdW5pdD86IER1cmF0aW9uVW5pdFR5cGUsXG4pOiBEdXJhdGlvbiB7XG4gIHJldHVybiBuZXcgRHVyYXRpb24oaW5wdXQsIHVuaXQpXG59XG4iXSwibmFtZXMiOlsiZGF5anMiLCJkdXJhdGlvbmxpYiIsImV4dGVuZCIsIkR1cmF0aW9uIiwiX2R1cmF0aW9uIiwiaW5wdXQiLCJ1bml0IiwiZHVyYXRpb24iLCJhc01pbGxpc2Vjb25kcyIsIm1pbGxpc2Vjb25kcyIsImFzU2Vjb25kcyIsInNlY29uZHMiLCJhc01pbnV0ZXMiLCJtaW51dGVzIiwiYXNIb3VycyIsImhvdXJzIiwiYXNEYXlzIiwiZGF5cyIsImFzV2Vla3MiLCJ3ZWVrcyIsImFzTW9udGhzIiwibW9udGhzIiwiYXNZZWFycyIsInllYXJzIiwiaHVtYW5pemVkIiwiaHVtYW5pemUiLCJmb3JtYXQiLCJmb3JtYXRTdHIiLCJjb25zdHJ1Y3RvciJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxPQUFPQSxXQUFXLFFBQU87QUFFekIsT0FBT0MsaUJBQWlCLHdCQUF1QjtBQUkvQ0QsTUFBTUUsTUFBTSxDQUFDRDtJQUdGO0FBRFgsT0FBTyxNQUFNRTtJQVVIQyxVQUNOQyxLQUE2QyxFQUM3Q0MsSUFBdUIsRUFDWjtRQUNYLElBQUksT0FBT0QsU0FBUyxVQUFVLE9BQU9MLE1BQU1PLFFBQVEsQ0FBQ0YsT0FBaUJDO1FBRXJFLElBQUksT0FBT0QsU0FBUyxVQUFVLE9BQU9MLE1BQU1PLFFBQVEsQ0FBQ0Y7UUFFcEQsT0FBT0wsTUFBTU8sUUFBUSxDQUFDRjtJQUN4QjtJQUVBLElBQVdFLFdBQXNCO1FBQy9CLGdDQUFPLElBQUksRUFBRUE7SUFDZjtJQUVBLElBQVdDLGlCQUF5QjtRQUNsQyxPQUFPLHlCQUFBLElBQUksRUFBRUQsV0FBU0MsY0FBYztJQUN0QztJQUVBLElBQVdDLGVBQXVCO1FBQ2hDLE9BQU8seUJBQUEsSUFBSSxFQUFFRixXQUFTRSxZQUFZO0lBQ3BDO0lBRUEsSUFBV0MsWUFBb0I7UUFDN0IsT0FBTyx5QkFBQSxJQUFJLEVBQUVILFdBQVNHLFNBQVM7SUFDakM7SUFFQSxJQUFXQyxVQUFrQjtRQUMzQixPQUFPLHlCQUFBLElBQUksRUFBRUosV0FBU0ksT0FBTztJQUMvQjtJQUVBLElBQVdDLFlBQW9CO1FBQzdCLE9BQU8seUJBQUEsSUFBSSxFQUFFTCxXQUFTSyxTQUFTO0lBQ2pDO0lBRUEsSUFBV0MsVUFBa0I7UUFDM0IsT0FBTyx5QkFBQSxJQUFJLEVBQUVOLFdBQVNNLE9BQU87SUFDL0I7SUFFQSxJQUFXQyxVQUFrQjtRQUMzQixPQUFPLHlCQUFBLElBQUksRUFBRVAsV0FBU08sT0FBTztJQUMvQjtJQUVBLElBQVdDLFFBQWdCO1FBQ3pCLE9BQU8seUJBQUEsSUFBSSxFQUFFUixXQUFTUSxLQUFLO0lBQzdCO0lBRUEsSUFBV0MsU0FBaUI7UUFDMUIsT0FBTyx5QkFBQSxJQUFJLEVBQUVULFdBQVNTLE1BQU07SUFDOUI7SUFFQSxJQUFXQyxPQUFlO1FBQ3hCLE9BQU8seUJBQUEsSUFBSSxFQUFFVixXQUFTVSxJQUFJO0lBQzVCO0lBRUEsSUFBV0MsVUFBa0I7UUFDM0IsT0FBTyx5QkFBQSxJQUFJLEVBQUVYLFdBQVNXLE9BQU87SUFDL0I7SUFFQSxJQUFXQyxRQUFnQjtRQUN6QixPQUFPLHlCQUFBLElBQUksRUFBRVosV0FBU1ksS0FBSztJQUM3QjtJQUVBLElBQVdDLFdBQW1CO1FBQzVCLE9BQU8seUJBQUEsSUFBSSxFQUFFYixXQUFTYSxRQUFRO0lBQ2hDO0lBRUEsSUFBV0MsU0FBaUI7UUFDMUIsT0FBTyx5QkFBQSxJQUFJLEVBQUVkLFdBQVNjLE1BQU07SUFDOUI7SUFFQSxJQUFXQyxVQUFrQjtRQUMzQixPQUFPLHlCQUFBLElBQUksRUFBRWYsV0FBU2UsT0FBTztJQUMvQjtJQUVBLElBQVdDLFFBQWdCO1FBQ3pCLE9BQU8seUJBQUEsSUFBSSxFQUFFaEIsV0FBU2dCLEtBQUs7SUFDN0I7SUFFQSxJQUFXQyxZQUFvQjtRQUM3QixPQUFPLHlCQUFBLElBQUksRUFBRWpCLFdBQVNrQixRQUFRO0lBQ2hDO0lBRU9DLE9BQU9DLFNBQWtCLEVBQVU7UUFDeEMsT0FBTyx5QkFBQSxJQUFJLEVBQUVwQixXQUFTbUIsTUFBTSxDQUFDQztJQUMvQjtJQTVGQUMsWUFDRXZCLEtBQXdELEVBQ3hEQyxJQUFtQyxDQUNuQztRQUxGLGdDQUFTOzttQkFBVCxLQUFBOzt1Q0FNUUMsV0FBVyxJQUFJLENBQUNILFNBQVMsQ0FBQ0MsT0FBT0M7SUFDekM7QUF3RkY7QUFLQSxPQUFPLFNBQVNDLFNBQ2RGLEtBQTZDLEVBQzdDQyxJQUF1QjtJQUV2QixPQUFPLElBQUlILFNBQVNFLE9BQU9DO0FBQzdCIn0=